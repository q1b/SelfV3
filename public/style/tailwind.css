@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono&family=Jua&family=Skranji:wght@400;700&display=swap");

/*
! tailwindcss v3.0.0-alpha.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after{
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  --tw-backdrop-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-opacity: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible{
  visibility: visible;
}

.fixed{
  position: fixed;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.inset-0{
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.bottom-4{
  bottom: 1rem;
}

.right-4{
  right: 1rem;
}

.top-4{
  top: 1rem;
}

.left-8{
  left: 2rem;
}

.right-10{
  right: 2.5rem;
}

.top-10{
  top: 2.5rem;
}

.z-50{
  z-index: 50;
}

.z-0{
  z-index: 0;
}

.z-10{
  z-index: 10;
}

.col-span-full{
  grid-column: 1 / -1;
}

.col-start-1{
  grid-column-start: 1;
}

.col-end-13{
  grid-column-end: 13;
}

.m-0{
  margin: 0px;
}

.m-auto{
  margin: auto;
}

.my-8{
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mb-6{
  margin-bottom: 1.5rem;
}

.mb-3{
  margin-bottom: 0.75rem;
}

.mb-1{
  margin-bottom: 0.25rem;
}

.ml-4{
  margin-left: 1rem;
}

.mb-8{
  margin-bottom: 2rem;
}

.box-border{
  box-sizing: border-box;
}

.block{
  display: block;
}

.inline-block{
  display: inline-block;
}

.inline{
  display: inline;
}

.flex{
  display: flex;
}

.grid{
  display: grid;
}

.list-item{
  display: list-item;
}

.hidden{
  display: none;
}

.h-screen{
  height: 100vh;
}

.h-32{
  height: 8rem;
}

.h-28{
  height: 7rem;
}

.h-64{
  height: 16rem;
}

.h-0{
  height: 0px;
}

.h-6{
  height: 1.5rem;
}

.h-8{
  height: 2rem;
}

.h-48{
  height: 12rem;
}

.max-h-screen{
  max-height: 100vh;
}

.max-h-full{
  max-height: 100%;
}

.max-h-96{
  max-height: 24rem;
}

.min-h-screen{
  min-height: 100vh;
}

.min-h-full{
  min-height: 100%;
}

.w-full{
  width: 100%;
}

.w-32{
  width: 8rem;
}

.w-28{
  width: 7rem;
}

.w-0{
  width: 0px;
}

.w-\[calc\(100\%-40px\)\]{
  width: calc(100% - 40px);
}

.w-6{
  width: 1.5rem;
}

.w-8{
  width: 2rem;
}

.min-w-full{
  min-width: 100%;
}

.max-w-5xl{
  max-width: 64rem;
}

.max-w-xl{
  max-width: 36rem;
}

.max-w-full{
  max-width: 100%;
}

.max-w-\[calc\(100\%-20px\)\]{
  max-width: calc(100% - 20px);
}

.flex-none{
  flex: none;
}

.flex-shrink-0{
  flex-shrink: 0;
}

.-translate-x-full{
  --tw-translate-x: -100%;
  transform: var(--tw-transform);
}

.translate-y-4{
  --tw-translate-y: 1rem;
  transform: var(--tw-transform);
}

.transform{
  transform: var(--tw-transform);
}

.grid-cols-12{
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-cols-1{
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col{
  flex-direction: column;
}

.place-content-center{
  place-content: center;
}

.place-content-around{
  place-content: space-around;
}

.items-center{
  align-items: center;
}

.justify-center{
  justify-content: center;
}

.gap-16{
  gap: 4rem;
}

.gap-x-4{
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-y-6{
  row-gap: 1.5rem;
}

.gap-y-2{
  row-gap: 0.5rem;
}

.gap-x-2{
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-y-12{
  row-gap: 3rem;
}

.gap-y-4{
  row-gap: 1rem;
}

.gap-x-8{
  -moz-column-gap: 2rem;
       column-gap: 2rem;
}

.overflow-hidden{
  overflow: hidden;
}

.overflow-y-auto{
  overflow-y: auto;
}

.overflow-y-scroll{
  overflow-y: scroll;
}

.truncate{
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.rounded-lg{
  border-radius: 0.5rem;
}

.rounded-xl{
  border-radius: 0.75rem;
}

.rounded-full{
  border-radius: 9999px;
}

.rounded-md{
  border-radius: 0.375rem;
}

.rounded-2xl{
  border-radius: 1rem;
}

.border{
  border-width: 1px;
}

.border-l-2{
  border-left-width: 2px;
}

.border-blue-400{
  --tw-border-opacity: 1;
  border-color: rgb(96 165 250 / var(--tw-border-opacity));
}

.border-slate-200{
  --tw-border-opacity: 1;
  border-color: rgb(226 232 240 / var(--tw-border-opacity));
}

.border-transparent{
  border-color: transparent;
}

.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-transparent{
  background-color: transparent;
}

.bg-slate-100{
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity));
}

.bg-slate-1000{
  --tw-bg-opacity: 1;
  background-color: rgb(3 14 28 / var(--tw-bg-opacity));
}

.bg-blue-1000\/30{
  background-color: rgb(0 20 91 / 0.3);
}

.bg-slate-900\/30{
  background-color: rgb(15 23 42 / 0.3);
}

.bg-\[hsl\(206\2c 100\%\2c 8\%\)\]\/50{
  background-color: hsl(206 100% 8% / 0.5);
}

.bg-gradient-to-br{
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.from-transparent{
  --tw-gradient-from: transparent;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(0 0 0 / 0));
}

.from-blue-400{
  --tw-gradient-from: #60a5fa;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(96 165 250 / 0));
}

.from-sky-400{
  --tw-gradient-from: #38bdf8;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(56 189 248 / 0));
}

.via-indigo-500{
  --tw-gradient-stops: var(--tw-gradient-from), #6366f1, var(--tw-gradient-to, rgb(99 102 241 / 0));
}

.to-slate-600\/10{
  --tw-gradient-to: rgb(71 85 105 / 0.1);
}

.to-violet-600{
  --tw-gradient-to: #7c3aed;
}

.to-blue-500{
  --tw-gradient-to: #3b82f6;
}

.fill-white{
  fill: #fff;
}

.fill-\[\#FFB0E9\]{
  fill: #FFB0E9;
}

.stroke-white{
  stroke: #fff;
}

.stroke-\[\#0085FF\]{
  stroke: #0085FF;
}

.stroke-\[\#FF00C7\]{
  stroke: #FF00C7;
}

.stroke-\[4\]{
  stroke-width: 4;
}

.stroke-2{
  stroke-width: 2;
}

.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}

.p-2{
  padding: 0.5rem;
}

.p-6{
  padding: 1.5rem;
}

.p-10{
  padding: 2.5rem;
}

.p-0\.5{
  padding: 0.125rem;
}

.p-0{
  padding: 0px;
}

.p-3{
  padding: 0.75rem;
}

.p-1{
  padding: 0.25rem;
}

.py-0\.5{
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-0{
  padding-top: 0px;
  padding-bottom: 0px;
}

.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-1\.5{
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-1{
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.py-10{
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.px-2{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-1{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.pt-6{
  padding-top: 1.5rem;
}

.pb-16{
  padding-bottom: 4rem;
}

.pl-1{
  padding-left: 0.25rem;
}

.pt-2{
  padding-top: 0.5rem;
}

.pt-3{
  padding-top: 0.75rem;
}

.pt-4{
  padding-top: 1rem;
}

.pr-20{
  padding-right: 5rem;
}

.text-left{
  text-align: left;
}

.text-center{
  text-align: center;
}

.align-middle{
  vertical-align: middle;
}

.font-heading{
  font-family: Skranji, cursive;
}

.font-p{
  font-family: Jua, sans-serif;
}

.text-xl{
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-4xl{
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-5xl{
  font-size: 3rem;
  line-height: 1;
}

.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-xs{
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-semibold{
  font-weight: 600;
}

.font-black{
  font-weight: 900;
}

.font-bold{
  font-weight: 700;
}

.font-medium{
  font-weight: 500;
}

.leading-6{
  line-height: 1.5rem;
}

.leading-5{
  line-height: 1.25rem;
}

.tracking-wider{
  letter-spacing: 0.05em;
}

.text-blue-500{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.text-blue-400{
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity));
}

.text-slate-700{
  --tw-text-opacity: 1;
  color: rgb(51 65 85 / var(--tw-text-opacity));
}

.text-slate-400{
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity));
}

.text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-slate-500{
  --tw-text-opacity: 1;
  color: rgb(100 116 139 / var(--tw-text-opacity));
}

.text-yellow-500{
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity));
}

.text-indigo-500{
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity));
}

.text-violet-500{
  --tw-text-opacity: 1;
  color: rgb(139 92 246 / var(--tw-text-opacity));
}

.text-purple-500{
  --tw-text-opacity: 1;
  color: rgb(168 85 247 / var(--tw-text-opacity));
}

.text-pink-500{
  --tw-text-opacity: 1;
  color: rgb(236 72 153 / var(--tw-text-opacity));
}

.text-rose-500{
  --tw-text-opacity: 1;
  color: rgb(244 63 94 / var(--tw-text-opacity));
}

.text-gray-400{
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.text-slate-900{
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity));
}

.text-sky-400{
  --tw-text-opacity: 1;
  color: rgb(56 189 248 / var(--tw-text-opacity));
}

.opacity-80{
  opacity: 0.8;
}

.opacity-0{
  opacity: 0;
}

.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -2px rgb(0 0 0 / 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-offset-slate-1000{
  --tw-ring-offset-color: #030E1C;
}

.drop-shadow-lg{
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-filter);
}

.backdrop-blur-\[1px\]{
  --tw-backdrop-blur: blur(1px);
  -webkit-backdrop-filter: var(--tw-backdrop-filter);
          backdrop-filter: var(--tw-backdrop-filter);
}

.backdrop-blur{
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-filter);
          backdrop-filter: var(--tw-backdrop-filter);
}

.transition-colors{
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform-colors{
  transition-property: transform,color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity{
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200{
  transition-duration: 200ms;
}

.duration-500{
  transition-duration: 500ms;
}

.duration-300{
  transition-duration: 300ms;
}

.ease-snappy{
  transition-timing-function: cubic-bezier(.2,.8,.4,1);
}

.project-scrollbar::-webkit-scrollbar-track
{
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
  border-radius: 12px;
}

.project-scrollbar::-webkit-scrollbar
{
  width: 8px;
}

.project-scrollbar::-webkit-scrollbar-thumb
{
  border-radius: 12px;
  background-image: -webkit-gradient(linear,
									   left bottom,
									   left top,
									   color-stop(0.44, rgb(122,153,217)),
									   color-stop(0.72, rgb(73,125,189)),
									   color-stop(0.86, rgb(28,58,148)));
}

.tab-highlight-none {
  -webkit-tap-highlight-color: transparent;
}

abbr[title] {
  text-decoration: none;
}

.bg-blue-gradient {
  background: radial-gradient(
      circle,
      hsla(231, 100%, 50%, 1) 0%,
      hsla(196, 100%, 50%, 1) 100%
    );
}

.bg-blue-shadow {
  box-shadow: 0px 0px 60px 1px hsla(210, 100%, 70%, 1);
}

.shadow-white-lg {
  box-shadow: 0 10px 15px -3px rgba(255, 255, 255, 0.1),
      0 4px 6px -2px rgba(255, 255, 255, 0.05);
}

.shadow-project {
  text-shadow: 1.4px 1.1px 2px hsl(210, 20%, 50%);
}

.container{
  width: 100%;
}

@media (min-width: 640px){
  .container{
    max-width: 640px;
  }
}

@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}

@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}

@media (min-width: 1280px){
  .container{
    max-width: 1280px;
  }
}

@media (min-width: 1536px){
  .container{
    max-width: 1536px;
  }
}

.prose{
  color: #6b7280;
  max-width: none;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: #4b5563;
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)){
  color: #0e7490;
  text-decoration: none;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)){
  color: #111827;
  font-weight: 500;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: decimal;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)){
  position: relative;
  padding-left: 1.75em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::before{
  content: counter(list-item, var(--list-counter-style, decimal)) ".";
  position: absolute;
  font-weight: 400;
  color: #6b7280;
  left: 0;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)){
  position: relative;
  padding-left: 1.5em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::before{
  content: "";
  position: absolute;
  background-color: #d1d5db;
  border-radius: 0;
  width: 0.75em;
  height: 0.125em;
  top: calc(0.875em - 0.0625em);
  left: 0;
}

.prose :where(hr):not(:where([class~="not-prose"] *)){
  border-color: #e5e7eb;
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: #111827;
  border-left-width: 0.25rem;
  border-left-color: #e5e7eb;
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)){
  color: #111827;
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
}

.prose :where(h2):not(:where([class~="not-prose"] *)){
  color: #111827;
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
}

.prose :where(h3):not(:where([class~="not-prose"] *)){
  color: #111827;
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}

.prose :where(h4):not(:where([class~="not-prose"] *)){
  color: #111827;
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
  font-size: 1.125em;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}

.prose :where(figure figcaption):not(:where([class~="not-prose"] *)){
  color: #6b7280;
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)){
  color: #7c3aed;
  font-weight: 400;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-weight: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)){
  color: #fff;
  overflow-x: auto;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 0;
  margin-bottom: 0;
  border-radius: 0;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: 400;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.prose :where(thead):not(:where([class~="not-prose"] *)){
  color: #4b5563;
  font-weight: 600;
  border-bottom-width: 1px;
  border-bottom-color: #e5e7eb;
}

.prose :where(thead th):not(:where([class~="not-prose"] *)){
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
  padding-top: 0;
  font-weight: 600;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: #e5e7eb;
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: top;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose{
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}

.prose :where(ol):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(ul):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose > :where(ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~="not-prose"] *)){
}

.prose > :where(:last-child):not(:where([class~="not-prose"] *)){
}

:where(.prose:first-child > :first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

:where(.prose:last-child > :last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose :where(h1, h2):not(:where([class~="not-prose"] *)){
  letter-spacing: -0.025em;
}

.prose :where(h2, h3):not(:where([class~="not-prose"] *)){
  scroll-margin-top: 6.875rem;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)){
  color: inherit;
  font-weight: inherit;
}

.prose :where(tbody code):not(:where([class~="not-prose"] *)){
  font-size: 0.75rem;
}

.prose-sm{
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.prose-sm :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-sm :where(blockquote):not(:where([class~="not-prose"] *)){
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.1111111em;
}

.prose-sm :where(h1):not(:where([class~="not-prose"] *)){
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.prose-sm :where(h2):not(:where([class~="not-prose"] *)){
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.prose-sm :where(h3):not(:where([class~="not-prose"] *)){
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.prose-sm :where(h4):not(:where([class~="not-prose"] *)){
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.prose-sm :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm :where(figure figcaption):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.prose-sm :where(code):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
}

.prose-sm :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}

.prose-sm :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.8888889em;
}

.prose-sm :where(pre):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(ol):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where(ul):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.prose-sm :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 1.5714286em;
}

.prose-sm :where(ol > li):not(:where([class~="not-prose"] *))::before{
  left: 0;
}

.prose-sm :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 1.5714286em;
}

.prose-sm :where(ul > li):not(:where([class~="not-prose"] *))::before{
  height: 0.3571429em;
  width: 0.3571429em;
  top: calc(0.8571429em - 0.1785714em);
  left: 0.2142857em;
}

.prose-sm > :where(ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.prose-sm > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.prose-sm > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.1428571em;
}

.prose-sm > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.1428571em;
}

.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(hr):not(:where([class~="not-prose"] *)){
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.prose-sm :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm :where(table):not(:where([class~="not-prose"] *)){
  font-size: 0.8571429em;
  line-height: 1.5;
}

.prose-sm :where(thead th):not(:where([class~="not-prose"] *)){
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose-sm :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose-sm :where(tbody td):not(:where([class~="not-prose"] *)){
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose-sm :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose-sm > :where(:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose-sm > :where(:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.prose-theme-light :where(h1):not(:where([class~="not-prose"] *)){
  text-shadow: 2px 2px 1px #0f172a77;
  color: #0f172a;
  font-family: Skranji, cursive;
  font-weight: 800;
}

.prose-theme-light :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
}

.prose-theme-light :where(h1 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #0f172a;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.prose-theme-light :where(h1 a):not(:where([class~="not-prose"] *)):hover{
  color: #06b6d4;
  text-shadow: 0px 0px 2px #06b6d4AA;
}

.prose-theme-light :where(h1 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.prose-theme-light :where(h2):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #1e293b;
  font-weight: 700;
}

.prose-theme-light :where(h2 strong):not(:where([class~="not-prose"] *)){
  color: #0f172a;
  font-weight: 800;
}

.prose-theme-light :where(h2 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #0f172a;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.prose-theme-light :where(h2 a):not(:where([class~="not-prose"] *)):hover{
  color: #06b6d4;
  text-shadow: 0px 0px 2px #06b6d4AA;
}

.prose-theme-light :where(h2 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.prose-theme-light :where(h3):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #1e293b;
  font-weight: 600;
}

.prose-theme-light :where(h3 strong):not(:where([class~="not-prose"] *)){
  color: #0f172a;
  font-weight: 700;
}

.prose-theme-light :where(h3 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #0f172a;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.prose-theme-light :where(h3 a):not(:where([class~="not-prose"] *)):hover{
  color: #06b6d4;
  text-shadow: 0px 0px 2px #06b6d4AA;
}

.prose-theme-light :where(h3 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.prose-theme-light :where(h4):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #1e293b;
  font-weight: 600;
}

.prose-theme-light :where(h4 strong):not(:where([class~="not-prose"] *)){
  color: #0f172a;
  font-weight: 700;
}

.prose-theme-light :where(h4 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #0f172a;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.prose-theme-light :where(h4 a):not(:where([class~="not-prose"] *)):hover{
  color: #06b6d4;
  text-shadow: 0px 0px 2px #06b6d4AA;
}

.prose-theme-light :where(h4 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.prose-theme-light :where(p):not(:where([class~="not-prose"] *)){
  color: #1e293bBB;
  letter-spacing: 1px;
  font-family: Jua, sans-serif;
}

.prose-theme-light :where(p strong):not(:where([class~="not-prose"] *)){
  color: #0f172aBB;
  font-family: Jua, sans-serif;
  font-weight: 600;
}

.prose-theme-light :where(a):not(:where([class~="not-prose"] *)){
  color: #2563eb;
  background: linear-gradient(to bottom, rgba(165, 243, 252, 0.4) 0%,rgba(165, 243, 252, 0.4) 100%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 4px 4px;
  padding-right: 1px;
  padding-left: 1px;
  text-decoration: none;
  transition: background-size .2s;
  font-weight: 500;
}

.prose-theme-light :where(a):not(:where([class~="not-prose"] *)):hover{
  background-size: 4px 50px;
}

.prose-theme-light :where(p a):not(:where([class~="not-prose"] *)){
}

.prose-theme-light :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: #1e293b;
}

.prose-theme-light :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.prose-theme-light :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.prose-theme-light :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.prose-theme-light :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.prose-theme-light :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.prose-theme-light :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.prose-theme-light :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.prose-theme-light :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.prose-theme-light :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: decimal;
}

.prose-theme-light :where(ol > li):not(:where([class~="not-prose"] *)){
  position: relative;
}

.prose-theme-light :where(ol > li):not(:where([class~="not-prose"] *))::before{
  content: counter(list-item, var(--list-counter-style, decimal)) ".";
  position: absolute;
  font-weight: 400;
  color: #475569;
}

.prose-theme-light :where(ul > li):not(:where([class~="not-prose"] *)){
  position: relative;
}

.prose-theme-light :where(ul > li):not(:where([class~="not-prose"] *))::before{
  content: "";
  position: absolute;
  background-color: #475569;
  border-radius: 50%;
}

.prose-theme-light :where(hr):not(:where([class~="not-prose"] *)){
  border-color: #cbd5e1;
  border-top-width: 3px;
}

.prose-theme-light :where(.warning.custom-block):not(:where([class~="not-prose"] *)){
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
  background-color: #fef08a;
  border-left-width: 0.25rem;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 16px;
  padding-bottom: 16px;
  border-left-color: #facc15;
}

.prose-theme-light :where(.warning.custom-block):not(:where([class~="not-prose"] *)) p.custom-block-title{
  margin-top: 0px;
  margin-bottom: 6px;
  font-family: JetBrains Mono, monospace;
  font-weight: 700;
  color: #fb923c;
}

.prose-theme-light :where(.warning.custom-block):not(:where([class~="not-prose"] *)) p{
  margin-top: 0px;
  margin-bottom: 0px;
  font-family: JetBrains Mono, monospace;
  color: #f59e0b;
  opacity: 1;
  font-weight: 500;
}

.prose-theme-light :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: #1e293b;
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
  background-color: #f1f5f9;
  border-left-width: 0.25rem;
  border-left-color: #94a3b8;
  quotes: "\201C""\201D""\2018""\2019";
}

.prose-theme-light :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

.prose-theme-light :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

.prose-theme-light :where(figure figcaption):not(:where([class~="not-prose"] *)){
  color: #0f172a;
}

.prose-theme-light :where(code):not(:where([class~="not-prose"] *)){
  color: #334155;
  font-weight: 600;
}

.prose-theme-light :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

.prose-theme-light :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

.prose-theme-light :where(a code):not(:where([class~="not-prose"] *)){
  color: #1e40af;
}

.prose-theme-light :where(pre):not(:where([class~="not-prose"] *)){
  color: #e2e8f0;
  background-color: #0f172a;
  overflow-x: auto;
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
}

.prose-theme-light :where(pre code):not(:where([class~="not-prose"] *)){
  font-family: JetBrains Mono, monospace;
}

.prose-theme-light :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

.prose-theme-light :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

/* Code Highlighting */

.language-css > code,
  .language-sass > code,
  .language-scss > code {
  color: #fd9170;
}

.language-diff .token.prefix.deleted,
  .language-diff .token.prefix.inserted {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

[class*="language-"] .namespace {
  opacity: 0.7;
}

.token.plain-text,
  [class*="language-bash"] span.token,
  [class*="language-shell"] span.token {
  color: hsla(var(--color-gray-90), 1);
}

[class*="language-bash"] span.token,
  [class*="language-shell"] span.token {
  font-style: bold;
}

.token.prolog,
  .token.comment,
  [class*="language-bash"] span.token.comment,
  [class*="language-shell"] span.token.comment {
  color: hsla(var(--color-gray-70), 1);
}

.token.selector,
  .token.tag,
  .token.unit,
  .token.url,
  .token.variable,
  .token.entity,
  .token.deleted {
  color: #fa5e5b;
}

.token.boolean,
  .token.constant,
  .token.doctype,
  .token.number,
  .token.regex,
  .token.builtin,
  .token.class,
  .token.hexcode,
  .token.class-name,
  .token.attr-name {
  color: hsla(var(--color-yellow), 1);
}

.token.atrule,
  .token.attribute,
  .token.attr-value .token.punctuation,
  .token.attr-value,
  .token.pseudo-class,
  .token.pseudo-element,
  .token.string {
  color: hsla(var(--color-green), 1);
}

.token.symbol,
  .token.function,
  .token.id,
  .token.important {
  color: hsla(var(--color-blue), 1);
}

.token.important,
  .token.id {
  font-weight: bold;
}

.token.cdata,
  .token.char,
  .token.property {
  color: #23b1af;
}

.token.inserted {
  color: hsla(var(--color-green), 1);
}

.token.keyword {
  color: #ff657c;
  font-style: italic;
}

.token.operator {
  color: hsla(var(--color-gray-70), 1);
}

.token.attr-value .token.attr-equals,
  .token.punctuation {
  color: hsla(var(--color-gray-80), 1);
}

.selection\:bg-\[hsla\(210\2c 100\%\2c 50\%\2c 0\.2\)\] *::-moz-selection{
  background-color: hsla(210,100%,50%,0.2);
}

.selection\:bg-\[hsla\(210\2c 100\%\2c 50\%\2c 0\.2\)\] *::selection{
  background-color: hsla(210,100%,50%,0.2);
}

.selection\:text-\[\#0099ff\] *::-moz-selection{
  --tw-text-opacity: 1;
  color: rgb(0 153 255 / var(--tw-text-opacity));
}

.selection\:text-\[\#0099ff\] *::selection{
  --tw-text-opacity: 1;
  color: rgb(0 153 255 / var(--tw-text-opacity));
}

.selection\:bg-\[hsla\(210\2c 100\%\2c 50\%\2c 0\.2\)\]::-moz-selection{
  background-color: hsla(210,100%,50%,0.2);
}

.selection\:bg-\[hsla\(210\2c 100\%\2c 50\%\2c 0\.2\)\]::selection{
  background-color: hsla(210,100%,50%,0.2);
}

.selection\:text-\[\#0099ff\]::-moz-selection{
  --tw-text-opacity: 1;
  color: rgb(0 153 255 / var(--tw-text-opacity));
}

.selection\:text-\[\#0099ff\]::selection{
  --tw-text-opacity: 1;
  color: rgb(0 153 255 / var(--tw-text-opacity));
}

.before\:absolute::before{
  content: "";
  position: absolute;
}

.before\:inset-0::before{
  content: "";
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.before\:rounded-md::before{
  content: "";
  border-radius: 0.375rem;
}

.before\:opacity-100::before{
  content: "";
  opacity: 1;
}

.before\:opacity-30::before{
  content: "";
  opacity: 0.3;
}

.before\:shadow-md::before{
  content: "";
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -1px rgb(0 0 0 / 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.before\:transition-opacity::before{
  content: "";
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.before\:duration-700::before{
  content: "";
  transition-duration: 700ms;
}

.before\:ease-in-out::before{
  content: "";
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.focus-within\:ring-2:focus-within{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.hover\:bg-slate-800\/10:hover{
  background-color: rgb(30 41 59 / 0.1);
}

.hover\:bg-indigo-400:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(129 140 248 / var(--tw-bg-opacity));
}

.hover\:bg-blue-1000\/50:hover{
  background-color: rgb(0 20 91 / 0.5);
}

.hover\:bg-slate-700\/40:hover{
  background-color: rgb(51 65 85 / 0.4);
}

.hover\:bg-slate-200:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
}

.hover\:bg-white\/5:hover{
  background-color: rgb(255 255 255 / 0.05);
}

.hover\:shadow-inner:hover{
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:outline-none:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring:focus{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-offset-2:focus{
  --tw-ring-offset-width: 2px;
}

.focus-visible\:ring-2:focus-visible{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-slate-700:focus-visible{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(51 65 85 / var(--tw-ring-opacity));
}

.focus-visible\:ring-offset-2:focus-visible{
  --tw-ring-offset-width: 2px;
}

.active\:scale-105:active{
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: var(--tw-transform);
}

.active\:bg-indigo-800:active{
  --tw-bg-opacity: 1;
  background-color: rgb(55 48 163 / var(--tw-bg-opacity));
}

.active\:shadow-md:active{
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -1px rgb(0 0 0 / 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.group:hover .group-hover\:translate-y-0{
  --tw-translate-y: 0px;
  transform: var(--tw-transform);
}

.group:hover .group-hover\:opacity-100{
  opacity: 1;
}

{
  background-image: #FF0060;
}

.dark .dark\:prose-theme-slate :where(h1):not(:where([class~="not-prose"] *)){
  text-shadow: 2px 2px 1px #f1f5f977;
  color: #f1f5f9;
  font-family: Skranji, cursive;
  font-weight: 800;
}

.dark .dark\:prose-theme-slate :where(h1 strong):not(:where([class~="not-prose"] *)){
  color: #f8fafc;
  font-weight: 900;
}

.dark .dark\:prose-theme-slate :where(h1 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #f1f5f9;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.dark .dark\:prose-theme-slate :where(h1 a):not(:where([class~="not-prose"] *)):hover{
  color: #a5f3fc;
  text-shadow: 0px 0px 2px #a5f3fcAA;
}

.dark .dark\:prose-theme-slate :where(h1 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.dark .dark\:prose-theme-slate :where(h2):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #e2e8f0;
  font-weight: 700;
}

.dark .dark\:prose-theme-slate :where(h2 strong):not(:where([class~="not-prose"] *)){
  color: #f1f5f9;
  font-weight: 800;
}

.dark .dark\:prose-theme-slate :where(h2 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #f1f5f9;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.dark .dark\:prose-theme-slate :where(h2 a):not(:where([class~="not-prose"] *)):hover{
  color: #a5f3fc;
  text-shadow: 0px 0px 2px #a5f3fcAA;
}

.dark .dark\:prose-theme-slate :where(h2 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.dark .dark\:prose-theme-slate :where(h3):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #e2e8f0;
  font-weight: 600;
}

.dark .dark\:prose-theme-slate :where(h3 strong):not(:where([class~="not-prose"] *)){
  color: #f1f5f9;
  font-weight: 700;
}

.dark .dark\:prose-theme-slate :where(h3 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #f1f5f9;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.dark .dark\:prose-theme-slate :where(h3 a):not(:where([class~="not-prose"] *)):hover{
  color: #a5f3fc;
  text-shadow: 0px 0px 2px #a5f3fcAA;
}

.dark .dark\:prose-theme-slate :where(h3 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.dark .dark\:prose-theme-slate :where(h4):not(:where([class~="not-prose"] *)){
  font-family: Skranji, cursive;
  color: #e2e8f0;
  font-weight: 600;
}

.dark .dark\:prose-theme-slate :where(h4 strong):not(:where([class~="not-prose"] *)){
  color: #f1f5f9;
  font-weight: 700;
}

.dark .dark\:prose-theme-slate :where(h4 a):not(:where([class~="not-prose"] *)){
  transition: 300ms color, boxShadow ease-in;
  color: #f1f5f9;
  background-size: 0px 0px;
  background: #FFFFFF00;
}

.dark .dark\:prose-theme-slate :where(h4 a):not(:where([class~="not-prose"] *)):hover{
  color: #a5f3fc;
  text-shadow: 0px 0px 2px #a5f3fcAA;
}

.dark .dark\:prose-theme-slate :where(h4 a):not(:where([class~="not-prose"] *)):hover strong{
  color: #0284c7;
  text-shadow: 0px 0px 2px #0284c7AA;
}

.dark .dark\:prose-theme-slate :where(p):not(:where([class~="not-prose"] *)){
  color: #64748bBB;
  letter-spacing: 1px;
  font-family: Jua, sans-serif;
}

.dark .dark\:prose-theme-slate :where(p strong):not(:where([class~="not-prose"] *)){
  color: #94a3b8BB;
  font-family: Jua, sans-serif;
  font-weight: 600;
}

.dark .dark\:prose-theme-slate :where(a):not(:where([class~="not-prose"] *)){
  color: #93c5fd;
  background: linear-gradient(to bottom, rgba(165, 243, 252, 0.4) 0%,rgba(165, 243, 252, 0.4) 100%);
  background-position: 0 100%;
  background-repeat: repeat-x;
  background-size: 4px 4px;
  padding-right: 1px;
  padding-left: 1px;
  text-decoration: none;
  transition: background-size .2s;
  font-weight: 500;
}

.dark .dark\:prose-theme-slate :where(a):not(:where([class~="not-prose"] *)):hover{
  background-size: 4px 50px;
}

.dark .dark\:prose-theme-slate :where(p a):not(:where([class~="not-prose"] *)){
}

.dark .dark\:prose-theme-slate :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: #1e293b;
}

.dark .dark\:prose-theme-slate :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.dark .dark\:prose-theme-slate :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.dark .dark\:prose-theme-slate :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-alpha;
}

.dark .dark\:prose-theme-slate :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-alpha;
}

.dark .dark\:prose-theme-slate :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.dark .dark\:prose-theme-slate :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.dark .dark\:prose-theme-slate :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: upper-roman;
}

.dark .dark\:prose-theme-slate :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  --list-counter-style: lower-roman;
}

.dark .dark\:prose-theme-slate :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  --list-counter-style: decimal;
}

.dark .dark\:prose-theme-slate :where(ol > li):not(:where([class~="not-prose"] *)){
  position: relative;
}

.dark .dark\:prose-theme-slate :where(ol > li):not(:where([class~="not-prose"] *))::before{
  content: counter(list-item, var(--list-counter-style, decimal)) ".";
  position: absolute;
  font-weight: 400;
  color: #cbd5e1;
}

.dark .dark\:prose-theme-slate :where(ul > li):not(:where([class~="not-prose"] *)){
  position: relative;
}

.dark .dark\:prose-theme-slate :where(ul > li):not(:where([class~="not-prose"] *))::before{
  content: "";
  position: absolute;
  background-color: #cbd5e1;
  border-radius: 50%;
}

.dark .dark\:prose-theme-slate :where(hr):not(:where([class~="not-prose"] *)){
  border-color: #cbd5e1;
  border-top-width: 3px;
}

.dark .dark\:prose-theme-slate :where(.warning.custom-block):not(:where([class~="not-prose"] *)){
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
  background-color: #fef08a;
  border-left-width: 0.25rem;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 16px;
  padding-bottom: 16px;
  border-left-color: #facc15;
}

.dark .prose-theme-slate :where(.warning.custom-block):not(:where([class~="not-prose"] *)) p.dark\:custom-block-title{
  margin-top: 0px;
  margin-bottom: 6px;
  font-family: JetBrains Mono, monospace;
  font-weight: 700;
  color: #fb923c;
}

.dark .dark\:prose-theme-slate :where(.warning.custom-block):not(:where([class~="not-prose"] *)) p{
  margin-top: 0px;
  margin-bottom: 0px;
  font-family: JetBrains Mono, monospace;
  color: #f59e0b;
  opacity: 1;
  font-weight: 500;
}

.dark .dark\:prose-theme-slate :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: #334155;
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
  background-color: #f1f5f9;
  border-left-width: 0.25rem;
  border-left-color: #94a3b8;
  quotes: "\201C""\201D""\2018""\2019";
}

.dark .dark\:prose-theme-slate :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

.dark .dark\:prose-theme-slate :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

.dark .dark\:prose-theme-slate :where(figure figcaption):not(:where([class~="not-prose"] *)){
  color: #0f172a;
}

.dark .dark\:prose-theme-slate :where(code):not(:where([class~="not-prose"] *)){
  color: #e2e8f0;
  font-weight: 600;
}

.dark .dark\:prose-theme-slate :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

.dark .dark\:prose-theme-slate :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

.dark .dark\:prose-theme-slate :where(a code):not(:where([class~="not-prose"] *)){
  color: #2563eb;
}

.dark .dark\:prose-theme-slate :where(pre):not(:where([class~="not-prose"] *)){
  color: #e2e8f0;
  background-color: #334155;
  overflow-x: auto;
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
  -webkit-clip-path: inset(0 round 4px);
          clip-path: inset(0 round 4px);
}

.dark .dark\:prose-theme-slate :where(pre code):not(:where([class~="not-prose"] *)){
  font-family: JetBrains Mono, monospace;
}

.dark .dark\:prose-theme-slate :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

.dark .dark\:prose-theme-slate :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

.dark .dark\:block{
  display: block;
}

.dark .dark\:border-slate-800{
  --tw-border-opacity: 1;
  border-color: rgb(30 41 59 / var(--tw-border-opacity));
}

.dark .dark\:bg-slate-1000{
  --tw-bg-opacity: 1;
  background-color: rgb(3 14 28 / var(--tw-bg-opacity));
}

.dark .dark\:bg-slate-900{
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.dark .dark\:bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.dark .dark\:bg-purple-700{
  --tw-bg-opacity: 1;
  background-color: rgb(126 34 206 / var(--tw-bg-opacity));
}

.dark .dark\:bg-purple-400{
  --tw-bg-opacity: 1;
  background-color: rgb(192 132 252 / var(--tw-bg-opacity));
}

.dark .dark\:bg-\[hsl\(266\2c 100\%\2c 4\%\)\]\/80{
  background-color: hsl(266 100% 4% / 0.8);
}

.dark .dark\:fill-\[\#F4ADFF\]{
  fill: #F4ADFF;
}

.dark .dark\:stroke-slate-800{
  stroke: #1e293b;
}

.dark .dark\:stroke-\[\#7000FF\]{
  stroke: #7000FF;
}

.dark .dark\:stroke-\[\#2B004E\]{
  stroke: #2B004E;
}

.dark .dark\:text-slate-800{
  --tw-text-opacity: 1;
  color: rgb(30 41 59 / var(--tw-text-opacity));
}

.dark .dark\:text-slate-600{
  --tw-text-opacity: 1;
  color: rgb(71 85 105 / var(--tw-text-opacity));
}

.dark .dark\:text-purple-1000{
  --tw-text-opacity: 1;
  color: rgb(26 1 34 / var(--tw-text-opacity));
}

.dark .dark\:text-purple-600{
  --tw-text-opacity: 1;
  color: rgb(147 51 234 / var(--tw-text-opacity));
}

.dark .dark\:text-purple-400{
  --tw-text-opacity: 1;
  color: rgb(192 132 252 / var(--tw-text-opacity));
}

.dark .dark\:bg-indigo-gradient {
  background: radial-gradient(
      circle,
      hsla(264, 100%, 50%, 1) 0%,
      hsla(272, 100%, 50%, 1) 100%
    );
}

.dark .dark\:bg-indigo-shadow {
  box-shadow: 0px 0px 60px 1px hsla(280, 100%, 70%, 1);
}

.dark .dark\:dark-shadow-project {
  text-shadow: 2.1px 1.9px 2px hsl(276, 50%, 76%);
}

.dark .dark\:shadow-slate-lg {
  box-shadow: 0 10px 15px -3px #22006155, 0 4px 6px -2px #aa41ff33;
}

.dark .dark\:hover\:bg-indigo-400\/10:hover{
  background-color: rgb(129 140 248 / 0.1);
}

.dark .dark\:hover\:bg-purple-500:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(168 85 247 / var(--tw-bg-opacity));
}

.dark .dark\:hover\:bg-pink-100:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(252 231 243 / var(--tw-bg-opacity));
}

.dark .dark\:focus\:ring-violet-500:focus{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(139 92 246 / var(--tw-ring-opacity));
}

.dark .dark\:focus\:ring-offset-white:focus{
  --tw-ring-offset-color: #fff;
}

@media (min-width: 640px){
  .sm\:prose{
    color: #6b7280;
    max-width: none;
  }

  .sm\:prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    color: #4b5563;
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .sm\:prose :where(a):not(:where([class~="not-prose"] *)){
    color: #0e7490;
    text-decoration: none;
    font-weight: 500;
  }

  .sm\:prose :where(strong):not(:where([class~="not-prose"] *)){
    color: #111827;
    font-weight: 500;
  }

  .sm\:prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
    --list-counter-style: upper-alpha;
  }

  .sm\:prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
    --list-counter-style: lower-alpha;
  }

  .sm\:prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
    --list-counter-style: upper-alpha;
  }

  .sm\:prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
    --list-counter-style: lower-alpha;
  }

  .sm\:prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
    --list-counter-style: upper-roman;
  }

  .sm\:prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
    --list-counter-style: lower-roman;
  }

  .sm\:prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
    --list-counter-style: upper-roman;
  }

  .sm\:prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
    --list-counter-style: lower-roman;
  }

  .sm\:prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
    --list-counter-style: decimal;
  }

  .sm\:prose :where(ol > li):not(:where([class~="not-prose"] *)){
    position: relative;
    padding-left: 1.75em;
  }

  .sm\:prose :where(ol > li):not(:where([class~="not-prose"] *))::before{
    content: counter(list-item, var(--list-counter-style, decimal)) ".";
    position: absolute;
    font-weight: 400;
    color: #6b7280;
    left: 0;
  }

  .sm\:prose :where(ul > li):not(:where([class~="not-prose"] *)){
    position: relative;
    padding-left: 1.5em;
  }

  .sm\:prose :where(ul > li):not(:where([class~="not-prose"] *))::before{
    content: "";
    position: absolute;
    background-color: #d1d5db;
    border-radius: 0;
    width: 0.75em;
    height: 0.125em;
    top: calc(0.875em - 0.0625em);
    left: 0;
  }

  .sm\:prose :where(hr):not(:where([class~="not-prose"] *)){
    border-color: #e5e7eb;
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .sm\:prose :where(blockquote):not(:where([class~="not-prose"] *)){
    font-weight: 500;
    font-style: italic;
    color: #111827;
    border-left-width: 0.25rem;
    border-left-color: #e5e7eb;
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }

  .sm\:prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
    content: open-quote;
  }

  .sm\:prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
    content: close-quote;
  }

  .sm\:prose :where(h1):not(:where([class~="not-prose"] *)){
    color: #111827;
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .sm\:prose :where(h1 strong):not(:where([class~="not-prose"] *)){
    font-weight: 900;
  }

  .sm\:prose :where(h2):not(:where([class~="not-prose"] *)){
    color: #111827;
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .sm\:prose :where(h2 strong):not(:where([class~="not-prose"] *)){
    font-weight: 800;
  }

  .sm\:prose :where(h3):not(:where([class~="not-prose"] *)){
    color: #111827;
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .sm\:prose :where(h3 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
  }

  .sm\:prose :where(h4):not(:where([class~="not-prose"] *)){
    color: #111827;
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
    font-size: 1.125em;
  }

  .sm\:prose :where(h4 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
  }

  .sm\:prose :where(figure figcaption):not(:where([class~="not-prose"] *)){
    color: #6b7280;
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .sm\:prose :where(code):not(:where([class~="not-prose"] *)){
    color: #7c3aed;
    font-weight: 400;
    font-size: 0.875em;
  }

  .sm\:prose :where(code):not(:where([class~="not-prose"] *))::before{
    content: "`";
  }

  .sm\:prose :where(code):not(:where([class~="not-prose"] *))::after{
    content: "`";
  }

  .sm\:prose :where(a code):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-weight: inherit;
  }

  .sm\:prose :where(pre):not(:where([class~="not-prose"] *)){
    color: #fff;
    overflow-x: auto;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 0;
    margin-bottom: 0;
    border-radius: 0;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }

  .sm\:prose :where(pre code):not(:where([class~="not-prose"] *)){
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: 400;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  .sm\:prose :where(pre code):not(:where([class~="not-prose"] *))::before{
    content: none;
  }

  .sm\:prose :where(pre code):not(:where([class~="not-prose"] *))::after{
    content: none;
  }

  .sm\:prose :where(table):not(:where([class~="not-prose"] *)){
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .sm\:prose :where(thead):not(:where([class~="not-prose"] *)){
    color: #4b5563;
    font-weight: 600;
    border-bottom-width: 1px;
    border-bottom-color: #e5e7eb;
  }

  .sm\:prose :where(thead th):not(:where([class~="not-prose"] *)){
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
    padding-top: 0;
    font-weight: 600;
  }

  .sm\:prose :where(tbody tr):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
    border-bottom-color: #e5e7eb;
  }

  .sm\:prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
  }

  .sm\:prose :where(tbody td):not(:where([class~="not-prose"] *)){
    vertical-align: top;
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .sm\:prose{
    font-size: 1rem;
    line-height: 1.75;
  }

  .sm\:prose :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .sm\:prose :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }

  .sm\:prose :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .sm\:prose :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .sm\:prose > :where(ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }

  .sm\:prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }

  .sm\:prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }

  .sm\:prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }

  .sm\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .sm\:prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .sm\:prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .sm\:prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .sm\:prose > :where(:first-child):not(:where([class~="not-prose"] *)){
  }

  .sm\:prose > :where(:last-child):not(:where([class~="not-prose"] *)){
  }

  :where(.prose:first-child > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  :where(.prose:last-child > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }

  .sm\:prose :where(h1, h2):not(:where([class~="not-prose"] *)){
    letter-spacing: -0.025em;
  }

  .sm\:prose :where(h2, h3):not(:where([class~="not-prose"] *)){
    scroll-margin-top: 6.875rem;
  }

  .sm\:prose :where(a strong):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-weight: inherit;
  }

  .sm\:prose :where(tbody code):not(:where([class~="not-prose"] *)){
    font-size: 0.75rem;
  }

  .sm\:mt-10{
    margin-top: 2.5rem;
  }

  .sm\:ml-0{
    margin-left: 0px;
  }

  .sm\:block{
    display: block;
  }

  .sm\:flex{
    display: flex;
  }

  .sm\:inline-flex{
    display: inline-flex;
  }

  .sm\:hidden{
    display: none;
  }

  .sm\:h-44{
    height: 11rem;
  }

  .sm\:h-36{
    height: 9rem;
  }

  .sm\:h-16{
    height: 4rem;
  }

  .sm\:w-44{
    width: 11rem;
  }

  .sm\:w-36{
    width: 9rem;
  }

  .sm\:w-auto{
    width: auto;
  }

  .sm\:w-\[600px\]{
    width: 600px;
  }

  .sm\:w-16{
    width: 4rem;
  }

  .sm\:max-w-\[calc\(100\%-60px\)\]{
    max-width: calc(100% - 60px);
  }

  .sm\:translate-x-0{
    --tw-translate-x: 0px;
    transform: var(--tw-transform);
  }

  .sm\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:grid-cols-3{
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .sm\:flex-col{
    flex-direction: column;
  }

  .sm\:gap-y-10{
    row-gap: 2.5rem;
  }

  .sm\:gap-y-12{
    row-gap: 3rem;
  }

  .sm\:gap-y-0{
    row-gap: 0px;
  }

  .sm\:gap-x-10{
    -moz-column-gap: 2.5rem;
         column-gap: 2.5rem;
  }

  .sm\:p-10{
    padding: 2.5rem;
  }

  .sm\:p-3{
    padding: 0.75rem;
  }

  .sm\:px-2{
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .sm\:py-1{
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }

  .sm\:text-lg{
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .sm\:text-2xl{
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@media (min-width: 768px){
  .md\:prose-lg{
    font-size: 1.125rem;
    line-height: 1.7777778;
  }

  .md\:prose-lg :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .md\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }

  .md\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }

  .md\:prose-lg :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }

  .md\:prose-lg :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }

  .md\:prose-lg :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }

  .md\:prose-lg :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }

  .md\:prose-lg :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .md\:prose-lg :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .md\:prose-lg :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }

  .md\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .md\:prose-lg :where(figure figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }

  .md\:prose-lg :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }

  .md\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8666667em;
  }

  .md\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.875em;
  }

  .md\:prose-lg :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }

  .md\:prose-lg :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .md\:prose-lg :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }

  .md\:prose-lg :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }

  .md\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 1.6666667em;
  }

  .md\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *))::before{
    left: 0;
  }

  .md\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 1.6666667em;
  }

  .md\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *))::before{
    width: 0.3333333em;
    height: 0.3333333em;
    top: calc(0.8888889em - 0.1666667em);
    left: 0.2222222em;
  }

  .md\:prose-lg > :where(ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .md\:prose-lg > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }

  .md\:prose-lg > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }

  .md\:prose-lg > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
  }

  .md\:prose-lg > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.3333333em;
  }

  .md\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .md\:prose-lg :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }

  .md\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .md\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .md\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .md\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .md\:prose-lg :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
    line-height: 1.5;
  }

  .md\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }

  .md\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .md\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .md\:prose-lg :where(tbody td):not(:where([class~="not-prose"] *)){
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }

  .md\:prose-lg :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .md\:prose-lg :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .md\:prose-lg > :where(:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .md\:prose-lg > :where(:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }

  .md\:col-span-3{
    grid-column: span 3 / span 3;
  }

  .md\:col-start-4{
    grid-column-start: 4;
  }

  .md\:block{
    display: block;
  }

  .md\:hidden{
    display: none;
  }

  .md\:h-52{
    height: 13rem;
  }

  .md\:h-44{
    height: 11rem;
  }

  .md\:w-52{
    width: 13rem;
  }

  .md\:w-44{
    width: 11rem;
  }

  .md\:w-\[720px\]{
    width: 720px;
  }

  .md\:max-w-\[calc\(100\%-120px\)\]{
    max-width: calc(100% - 120px);
  }

  .md\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row{
    flex-direction: row;
  }

  .md\:gap-y-11{
    row-gap: 2.75rem;
  }

  .md\:gap-x-8{
    -moz-column-gap: 2rem;
         column-gap: 2rem;
  }
}

@media (min-width: 1024px){
  .lg\:prose-xl{
    font-size: 1.25rem;
    line-height: 1.8;
  }

  .lg\:prose-xl :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  .lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }

  .lg\:prose-xl :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }

  .lg\:prose-xl :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:prose-xl :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-xl :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:prose-xl :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(figure figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }

  .lg\:prose-xl :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8611111em;
  }

  .lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }

  .lg\:prose-xl :where(ol):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 1.8em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *))::before{
    left: 0;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 1.8em;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *))::before{
    width: 0.35em;
    height: 0.35em;
    top: calc(0.9em - 0.175em);
    left: 0.25em;
  }

  .lg\:prose-xl > :where(ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }

  .lg\:prose-xl > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }

  .lg\:prose-xl > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }

  .lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
  }

  .lg\:prose-xl :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .lg\:prose-xl :where(tbody td):not(:where([class~="not-prose"] *)){
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .lg\:prose-xl :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .lg\:prose-xl > :where(:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl > :where(:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }

  .lg\:col-span-2{
    grid-column: span 2 / span 2;
  }

  .lg\:col-start-3{
    grid-column-start: 3;
  }

  .lg\:h-64{
    height: 16rem;
  }

  .lg\:h-56{
    height: 14rem;
  }

  .lg\:w-64{
    width: 16rem;
  }

  .lg\:w-56{
    width: 14rem;
  }

  .lg\:w-\[840px\]{
    width: 840px;
  }

  .lg\:max-w-\[calc\(10\%\+900px\)\]{
    max-width: calc(10% + 900px);
  }

  .lg\:gap-y-12{
    row-gap: 3rem;
  }
}